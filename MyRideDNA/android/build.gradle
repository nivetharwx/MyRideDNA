// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "28.0.3"
        minSdkVersion = 16
        compileSdkVersion = 28
        targetSdkVersion = 28
        supportLibVersion = "28.0.0"
        googlePlayServicesVersion = "11.8.0"
    }
    repositories {
        google()
        jcenter()
        maven { url "$rootDir/../node_modules/react-native/android" }
    }
    dependencies {
        // classpath 'com.android.tools.build:gradle:3.1.4'
        classpath 'com.android.tools.build:gradle:3.3.1'
        classpath 'com.google.gms:google-services:4.0.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        maven { url "https://jitpack.io" }
        maven { url "https://maven.google.com" }
        configurations.all { 
            resolutionStrategy { 
                force 'com.google.firebase:firebase-messaging:11.8.0' 
                force 'com.google.firebase:firebase-core:11.8.0' 
                force 'com.google.android.gms:play-services-gcm:11.8.0' 
                force "com.squareup.okhttp3:okhttp:3.9.1"
                force "com.squareup.okio:okio:1.13.0"
            } 
        }
    }
    configurations.matching { it.name == '_internal_aapt2_binary' }.all { config ->
        config.resolutionStrategy.eachDependency { details ->
            details.useVersion("3.5.0-alpha03-5252756")
        }
    }
}


// wrapper {
//     gradleVersion = '4.4'
//     distributionUrl = distributionUrl.replace("bin", "all")
// }
subprojects {
    project.configurations.all {

        resolutionStrategy.eachDependency { details ->

            if (details.requested.group == 'com.android.support'
                    && !details.requested.name.contains('multidex') ) {
                details.useVersion "27.1.0"
            }
        }
    }
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                compileSdkVersion 27
                buildToolsVersion "27.0.2"
            }
        }
    }
}
